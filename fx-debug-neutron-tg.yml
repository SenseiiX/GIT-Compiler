name: FusionX-DEBUG-NEUTRON
 
on:
   pull_request:
   workflow_dispatch:
     inputs:
       BUILD_TITLE:
         description: 'Custom Build Title'
         required: false
       KERNEL_TREE_1:
         description: 'Kernel Tree 1'
         default: 'https://github.com/SenseiiX/fusionX_sm8250'
         required: true
       KERNEL_TREE_BRANCH_1:
         description: 'Kernel Tree Branch 1'
         default: 'exp-sus'
         required: false
         type: choice
         options:
           - munch-sus
           - exp-sus
           - dev-base
       KERNEL_TREE_2:
         description: 'Kernel Tree 2'
         default: 'https://github.com/SenseiiX/fusionX_sm8250'
         required: true
       KERNEL_TREE_BRANCH_2:
         description: 'Kernel Tree Branch 2'
         default: 'exp-nxt'
         required: false
         type: choice
         options:
           - munch-next
           - exp-nxt
           - dev-base
       VERSION:
         description: 'Zip Version'
         default: '1.x'
         required: false
       ANYKERNEL_URL:
         description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
         default: 'https://github.com/SenseiiX/AnyKernel3'
         required: false
       ANYKERNEL_BRANCH:
         description: 'AnyKernel Branch'
         default: 'effcpu'
         required: true
       CUSTOM_SED:
         description: 'Custom Kernel Version'
         default: '-FusionX'
         required: false
       CODENAME:
         description: 'Device Codename'
         default: 'MUNCH'
         required: false
 
 
jobs:
   build:
     strategy:
       matrix:
         kernel: [1, 2]
         type: [original, modified]
     runs-on: ubuntu-latest
     env:
       UPLOAD_TO_RELEASE: false
 
     steps:
       - name: Install Dependencies
         run: sudo apt install flex libncurses6
 
       - name: Download & Extract Clang
         run: |
           wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
           mkdir clang
           unzstd -d clang.tar.zst
           tar -xf clang.tar -C clang
           
       - name: Set Kernel Environment Variables
         run: |
           case "${{ matrix.kernel }}" in
             1) 
                echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_1 }}" >> $GITHUB_ENV
                echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_1 }}" >> $GITHUB_ENV
                echo "KERNEL_VARIANT=SUSFS" >> $GITHUB_ENV ;;
             2) 
                echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_2 }}" >> $GITHUB_ENV
                echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_2 }}" >> $GITHUB_ENV
                echo "KERNEL_VARIANT=NEXT" >> $GITHUB_ENV ;;
           esac
       - name: Checkout Kernel
         run: git clone --depth=1 $KERNEL_TREE -b $KERNEL_TREE_BRANCH kernel_tree
 
       - name: Kernel Version
         run: |
           cd kernel_tree
           if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FusionX" ]]; then
             sed -i -e 's/CONFIG_LOCALVERSION="-FusionX"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/munch_defconfig
           fi
       - name: Apply Patches
         if: matrix.kernel
         run: |
           cd kernel_tree
           bash nextpatch.sh
       - name: Apply Modifications (if modified build)
         if: matrix.type == 'modified'
         run: |
           cd kernel_tree
           sed -i '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi 
           sed -i '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
           sed -i '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
           sed -i '/<2841600>;/c\//<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
           sed -i 's/qcom,mdss-pan-physical-width-dimension = <70>;$/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
           sed -i 's/qcom,mdss-pan-physical-height-dimension = <155>;$/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
       
       - name: Record build start time
         id: build_start
         run: |
           echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
           echo "start_date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
       
       - name: Build Kernel
         run: |
           export PATH="$(pwd)/clang/bin:$PATH"
           export ARCH=arm64
           export SUBARCH=ARM64
           export KBUILD_BUILD_USER="senseix"
           export KBUILD_BUILD_HOST="telegram"
           cd kernel_tree
           make O=out vendor/munch_defconfig
           make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
           if [[ "${{ matrix.type }}" == "original" ]]; then
             mv out/arch/arm64/boot/dtbo.img ../munch-aosp-dtbo.img
             mv out/arch/arm64/boot/dtb ../munch-normal-dtb
             cp out/arch/arm64/boot/Image.gz ../Image.gz
           else
             mv out/arch/arm64/boot/dtbo.img ../munch-miui-dtbo.img
             mv out/arch/arm64/boot/dtb ../munch-effcpu-dtb
           fi
           
       - name: Record build end time
         id: build_end
         run: |
           end_time=$(date +%s)
           start_time=${{ steps.build_start.outputs.start_time }}
           build_duration=$((end_time - start_time))
           echo "end_time=$end_time" >> $GITHUB_OUTPUT
           echo "build_duration=$build_duration" >> $GITHUB_OUTPUT
       
       - name: Upload Kernel Artifacts
         uses: actions/upload-artifact@v4
         with:
           name: kernel-${{ matrix.kernel }}-${{ matrix.type }}
           path: |
             munch-aosp-dtbo.img
             munch-miui-dtbo.img
             munch-normal-dtb
             munch-effcpu-dtb
             Image.gz
             
       - name: Save build metrics
         if: matrix.type == 'original'
         run: |
           mkdir -p /tmp/build-metrics
           echo "${{ steps.build_start.outputs.start_date }}" > /tmp/build-metrics/start-date-${{ matrix.kernel }}
           echo "${{ steps.build_end.outputs.build_duration }}" > /tmp/build-metrics/duration-${{ matrix.kernel }}
       
       - name: Upload build metrics
         if: matrix.type == 'original'
         uses: actions/upload-artifact@v4
         with:
           name: build-metrics-${{ matrix.kernel }}
           path: /tmp/build-metrics/
           
   package_anykernel:
     needs: build
     strategy:
       matrix:
         kernel: [1, 2]
     runs-on: ubuntu-latest
 
     steps:
       - name: Download Kernel Build Original
         uses: actions/download-artifact@v4
         with:
           name: kernel-${{ matrix.kernel }}-original
           path: kernel-${{ matrix.kernel }}-original
 
       - name: Download Kernel Build Modified
         uses: actions/download-artifact@v4
         with:
           name: kernel-${{ matrix.kernel }}-modified
           path: kernel-${{ matrix.kernel }}-modified
           
       - name: Download build metrics
         uses: actions/download-artifact@v4
         with:
           name: build-metrics-${{ matrix.kernel }}
           path: build-metrics
 
       - name: Clone AnyKernel3
         run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b ${{ github.event.inputs.ANYKERNEL_BRANCH }} AnyKernel3-${{ matrix.kernel }}
 
       - name: Move Kernel Files to AnyKernel3
         run: |
           mv kernel-${{ matrix.kernel }}-original/* AnyKernel3-${{ matrix.kernel }}/
           mv kernel-${{ matrix.kernel }}-modified/* AnyKernel3-${{ matrix.kernel }}/
       - name: Define ZIP Name
         run: |
           COMPILED_DATE=$(date +%Y%m%d)
           if [[ "${{ matrix.kernel }}" == "1" ]]; then
             ZIP_NAME="FusionX-SUSFS-${{ github.event.inputs.VERSION }}-$COMPILED_DATE"
             KERNEL_NAME="FusionX-SUSFS"
           else
             ZIP_NAME="FusionX-NEXT-${{ github.event.inputs.VERSION }}-$COMPILED_DATE"
             KERNEL_NAME="FusionX-NEXT"
           fi
           echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
           echo "KERNEL_NAME=$KERNEL_NAME" >> $GITHUB_ENV
           
       - name: Package Kernel
         run: |
           cd AnyKernel3-${{ matrix.kernel }}
           zip -r9 ../${{ env.ZIP_NAME }}.zip *

       - name: Read build metrics
         id: read_metrics
         run: |
           start_date=$(cat build-metrics/start-date-${{ matrix.kernel }})
           duration=$(cat build-metrics/duration-${{ matrix.kernel }})
           echo "start_date=$start_date" >> $GITHUB_OUTPUT
           echo "duration=$duration" >> $GITHUB_OUTPUT
           
           # Convert seconds to minutes and seconds format
           minutes=$((duration / 60))
           seconds=$((duration % 60))
           echo "build_time=${minutes}m ${seconds}s" >> $GITHUB_OUTPUT
       
       - name: Upload Flashable Kernel Zip to Telegram
         uses: appleboy/telegram-action@master
         with:
           to: ${{ secrets.TELEGRAM_CHAT_ID }}
           token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
           message: |
            ✅ ${{ env.KERNEL_NAME }} Compiled!!
            Date: ${{ steps.read_metrics.outputs.start_date }}
            Build Duration: ${{ steps.read_metrics.outputs.build_time }}
            Device: ${{ github.event.inputs.CODENAME }}
            Branch: ${{ matrix.kernel == 1 && github.event.inputs.KERNEL_TREE_BRANCH_1 || github.event.inputs.KERNEL_TREE_BRANCH_2 }}
             (⚠️This is a debug build, dont flash⚠️)
           document: ${{ env.ZIP_NAME }}.zip

       - name: Upload Flashable Kernel Zip
         uses: actions/upload-artifact@v4
         with:
           name: ${{ env.ZIP_NAME }}
           path: ${{ env.ZIP_NAME }}.zip